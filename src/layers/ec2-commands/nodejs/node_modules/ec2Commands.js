const AWS = require('aws-sdk')
const ec2 = new AWS.EC2()

const { INSTANCE_ID } = process.env

async function isRunning(instanceId) {
  const status = await instanceStatus(instanceId)
  return status === 'RUNNING'
}

async function isStopped(instanceId) {
  const status = await instanceStatus(instanceId)
  return status === 'STOPPED'
}

async function describeInstance(instanceId) {
  const data = await ec2.describeInstances(_params(instanceId)).promise()
  const instance = data?.Reservations?.[0].Instances?.[0]
  return instance
}

async function instanceStatus(instanceId) {
  const data = await ec2.describeInstanceStatus(_params(instanceId)).promise()
  return data?.InstanceStatuses?.[0]?.InstanceState?.Name?.toUpperCase() || 'STOPPED'
}

async function startInstance(instanceId) {
  return ec2
    .startInstances(_params(instanceId))
    .promise()
}

async function stopInstance(instanceId) {
  return ec2
    .stopInstances(_params(instanceId))
    .promise()
}


function _params(instanceId) {
  return {
    InstanceIds: [instanceId],
  }
}

const COMMAND_MAP = {
  'describe': describeInstance,
  'isRunning': isRunning,
  'isStopped': isStopped,
  'status': instanceStatus,
  'start': startInstance,
  'stop': stopInstance
}

async function ec2Instance(command = 'describe', instanceId = INSTANCE_ID) {
  return COMMAND_MAP[command](instanceId)
}

exports.ec2Instance = ec2Instance
